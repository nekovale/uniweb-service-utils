{"version":3,"file":"index.development.js","sources":["../../../src/service.ts"],"sourcesContent":["import axios from \"axios\";\nimport {\n  IGroup,\n  IRequestAuthLogin,\n  IRequestCreateGroup,\n  IRequestCreateStruct,\n  IRequestCreateTemplate,\n  IRequestCreateTemplateValue,\n  IRequestCreateUser,\n  IRequestInitStruct,\n  IRequestListTemplateValue,\n  IRequestQueryGroup,\n  IRequestRemoveGroup,\n  IRequestRemoveStruct,\n  IRequestRemoveTemplate,\n  IRequestRemoveUser,\n  IRequestResult,\n  IRequestUpdateGroup,\n  IRequestUpdateStruct,\n  IRequestUpdateTemplate,\n  IRequestUpdateUser,\n  IResultAuthLogin,\n  IResultCreateUser,\n  IResultUpdateUser,\n  ITemplate,\n  ITemplateValue,\n  IUser,\n  TLang,\n  TRole,\n  TResource,\n  TGroup,\n} from \"./types\";\n\nexport const Lang: Record<string, TLang> = {\n  en: \"en\",\n  zh: \"zh\",\n};\n\nexport const Role: Record<string, TRole> = {\n  admin: 1,\n  user: 2,\n  super: 3,\n};\n\nexport const Group: Record<string, TGroup> = {\n  list: 1,\n};\n\nexport const Resource: Record<string, TResource> = {\n  text: 1,\n  image: 2,\n  video: 3,\n  rich: 4,\n};\n\nexport class UniwebService {\n  private url: string = \"\";\n  private lang: TLang | undefined = Lang.en;\n  private authKey: string | null = null;\n\n  constructor() {}\n\n  private async request<T>({\n    method,\n    endpoint,\n    data,\n  }: {\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n    endpoint: string;\n    data?: any;\n  }): Promise<IRequestResult<T>> {\n    return axios\n      .request({\n        method,\n        url: endpoint,\n        baseURL: this.url,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept-Language\": this.lang,\n          ...(this.authKey && { Authorization: `Bearer ${this.authKey}` }),\n        },\n        params: method === \"GET\" ? data : undefined,\n        data: method === \"GET\" ? undefined : data,\n      })\n      .then((res) => ({\n        status: 200,\n        data: res.data,\n      }))\n      .catch((err) => ({\n        status: err.response?.status,\n        message: err.response?.data.message,\n      }));\n  }\n\n  private setAuth = ({ key }: { key: string }) => {\n    this.authKey = key;\n  };\n\n  public config = ({ url, lang }: { url?: string; lang?: TLang }) => {\n    if (url) this.url = url;\n    if (lang) this.lang = lang;\n  };\n\n  public auth = {\n    login: async (input: IRequestAuthLogin) => {\n      const result = await this.request<IResultAuthLogin>({\n        method: \"POST\",\n        endpoint: \"/auth/login\",\n        data: input,\n      });\n      if (result.status === 200 && result.data)\n        this.setAuth({ key: result.data?.access_token });\n      return result;\n    },\n  };\n\n  public manage = {\n    user: {\n      create: (input: IRequestCreateUser) =>\n        this.request<IResultCreateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/create-user\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateUser) =>\n        this.request<IResultUpdateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/update-user\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveUser) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-user\",\n          data: input,\n        }),\n      list: () =>\n        this.request<IUser[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-user\",\n        }),\n    },\n    struct: {\n      init: (input: IRequestInitStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/init-struct\",\n          data: input,\n        }),\n      create: (input: IRequestCreateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/add-struct\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-struct\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-struct\",\n          data: input,\n        }),\n    },\n    template: {\n      create: (input: IRequestCreateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/create-template\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-template\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-template\",\n          data: input,\n        }),\n      list: () =>\n        this.request<ITemplate[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template\",\n        }),\n      listValue: (input: IRequestListTemplateValue) =>\n        this.request<ITemplateValue[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template-value\",\n          data: input,\n        }),\n      createValue: (input: IRequestCreateTemplateValue) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-template-value\",\n          data: input,\n        }),\n    },\n    group: {\n      create: (input: IRequestCreateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-group\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/update-group\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/remove-group\",\n          data: input,\n        }),\n      get: (input: IRequestQueryGroup) =>\n        this.request<IGroup[]>({\n          method: \"GET\",\n          endpoint: \"/query/group\",\n          data: input,\n        }),\n    },\n  };\n}\n\nconst UniwebInstance = new UniwebService();\n\nexport { UniwebInstance };\n"],"names":["Lang","en","zh","UniwebService","_login","_this","this","url","lang","authKey","setAuth","key","config","auth","login","_asyncToGenerator","input","_result$data","result","request","method","endpoint","data","status","access_token","_x","apply","arguments","manage","user","create","update","remove","list","struct","init","template","listValue","createValue","group","get","prototype","_request","axios","baseURL","headers","_extends","Authorization","params","undefined","then","res","err","_err$response","_err$response2","response","message","_x2","UniwebInstance","text","image","video","rich","admin","super"],"mappings":"wzBAiCO,IAAMA,EAA8B,CACzCC,GAAI,KACJC,GAAI,MAoBOC,EAAa,WAKxB,SAAAA,IAAc,IA4CPC,EA5COC,EAAAC,KAAAA,KAJNC,IAAc,GAAED,KAChBE,KAA0BR,EAAKC,GAAEK,KACjCG,QAAyB,KAAIH,KAoC7BI,QAAU,UAAGC,IAAAA,IACnBN,EAAKI,QAAUE,GAChBL,KAEMM,OAAS,UAAGL,IAAAA,EAAKC,KAAAA,IAClBD,IAAKF,EAAKE,IAAMA,GAChBC,IAAMH,EAAKG,KAAOA,IACvBF,KAEMO,KAAO,CACZC,OAAKV,EAAAW,GAAE,UAAOC,GAA6B,IAAAC,EACnCC,QAAeb,EAAKc,QAA0B,CAClDC,OAAQ,OACRC,SAAU,cACVC,KAAMN,IAIR,OAFsB,MAAlBE,EAAOK,QAAkBL,EAAOI,MAClCjB,EAAKK,QAAQ,CAAEC,IAAgB,OAAbM,EAAEC,EAAOI,WAAI,EAAXL,EAAaO,eAC5BN,KACR,SAAAO,GAAA,OAAArB,EAAAsB,MAAApB,KAAAqB,UAAA,IACFrB,KAEMsB,OAAS,CACdC,KAAM,CACJC,OAAQ,SAACd,GAAyB,OAChCX,EAAKc,QAA2B,CAC9BC,OAAQ,OACRC,SAAU,sBACVC,KAAMN,GACN,EACJe,OAAQ,SAACf,GAAyB,OAChCX,EAAKc,QAA2B,CAC9BC,OAAQ,OACRC,SAAU,sBACVC,KAAMN,GACN,EACJgB,OAAQ,SAAChB,GAAyB,OAChCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,sBACVC,KAAMN,GACN,EACJiB,KAAM,WAAA,OACJ5B,EAAKc,QAAiB,CACpBC,OAAQ,MACRC,SAAU,qBACV,GAENa,OAAQ,CACNC,KAAM,SAACnB,GAAyB,OAC9BX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,sBACVC,KAAMN,GACN,EACJc,OAAQ,SAACd,GAA2B,OAClCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,qBACVC,KAAMN,GACN,EACJe,OAAQ,SAACf,GAA2B,OAClCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,wBACVC,KAAMN,GACN,EACJgB,OAAQ,SAAChB,GAA2B,OAClCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,wBACVC,KAAMN,GACN,GAENoB,SAAU,CACRN,OAAQ,SAACd,GAA6B,OACpCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,0BACVC,KAAMN,GACN,EACJe,OAAQ,SAACf,GAA6B,OACpCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,0BACVC,KAAMN,GACN,EACJgB,OAAQ,SAAChB,GAA6B,OACpCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,0BACVC,KAAMN,GACN,EACJiB,KAAM,WAAA,OACJ5B,EAAKc,QAAqB,CACxBC,OAAQ,MACRC,SAAU,yBACV,EACJgB,UAAW,SAACrB,GAAgC,OAC1CX,EAAKc,QAA0B,CAC7BC,OAAQ,MACRC,SAAU,8BACVC,KAAMN,GACN,EACJsB,YAAa,SAACtB,GAAkC,OAC9CX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,kCACVC,KAAMN,GACN,GAENuB,MAAO,CACLT,OAAQ,SAACd,GAA0B,OACjCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,yBACVC,KAAMN,GACN,EACJe,OAAQ,SAACf,GAA0B,OACjCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,yBACVC,KAAMN,GACN,EACJgB,OAAQ,SAAChB,GAA0B,OACjCX,EAAKc,QAAiB,CACpBC,OAAQ,OACRC,SAAU,yBACVC,KAAMN,GACN,EACJwB,IAAK,SAACxB,GAAyB,OAC7BX,EAAKc,QAAkB,CACrBC,OAAQ,MACRC,SAAU,eACVC,KAAMN,GACN,GAzKO,CAgCd,OAhCeb,EAAAsC,UAEFtB,QAAO,WAAA,IAAAuB,EAAA3B,GAArB,WACEK,OAAAA,EACAC,SAAAA,EACAC,KAAAA,IAMA,OAAOqB,EACJxB,QAAQ,CACPC,OAAAA,EACAb,IAAKc,EACLuB,QAAStC,KAAKC,IACdsC,QAAOC,EAAA,CACL,eAAgB,mBAChB,kBAAmBxC,KAAKE,MACpBF,KAAKG,SAAW,CAAEsC,cAAa,UAAYzC,KAAKG,UAEtDuC,OAAmB,QAAX5B,EAAmBE,OAAO2B,EAClC3B,KAAiB,QAAXF,OAAmB6B,EAAY3B,IAEtC4B,MAAK,SAACC,GAAG,MAAM,CACd5B,OAAQ,IACRD,KAAM6B,EAAI7B,KACX,IAAE,OACI,SAAC8B,GAAG,IAAAC,EAAAC,EAAA,MAAM,CACf/B,OAAoB,OAAd8B,EAAED,EAAIG,eAAQ,EAAZF,EAAc9B,OACtBiC,QAASF,OAAFA,EAAEF,EAAIG,eAAJD,EAAAA,EAAchC,KAAKkC,QAC7B,OACJ,OAAA,SAAAC,GAAA,OAAAf,EAAAhB,MAAApB,KAAAqB,UAAA,CAAA,CA9BoB,GA8BpBxB,CAAA,CArCuB,GAmLpBuD,EAAiB,IAAIvD,UA9LkB,CAC3C8B,KAAM,uBAG2C,CACjD0B,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,KAAM,UAdmC,CACzCC,MAAO,EACPlC,KAAM,EACNmC,MAAO"}