{"version":3,"file":"index.production.js","sources":["../../../src/service.ts"],"sourcesContent":["import axios from \"axios\";\nimport {\n  IGroup,\n  IRequestAuthLogin,\n  IRequestCreateGroup,\n  IRequestCreateStruct,\n  IRequestCreateTemplate,\n  IRequestCreateTemplateValue,\n  IRequestCreateUser,\n  IRequestListTemplateValue,\n  IRequestQueryGroup,\n  IRequestRemoveGroup,\n  IRequestRemoveStruct,\n  IRequestRemoveTemplate,\n  IRequestRemoveUser,\n  IRequestResult,\n  IRequestUpdateGroup,\n  IRequestUpdateStruct,\n  IRequestUpdateTemplate,\n  IRequestUpdateUser,\n  IResultAuthLogin,\n  IResultCreateUser,\n  IResultUpdateUser,\n  ITemplate,\n  ITemplateValue,\n  IUser,\n  TRole,\n  TResource,\n  TGroup,\n  IRequestAuthVerifyEmail,\n  IRequestResendVerifyEmail,\n  TUserStatus,\n  IRequestResetPassword,\n  IRequestSetPassword,\n  IRequestWeightStruct,\n  IResultGetUploadUrl,\n  IRequestCreatePublish,\n  IPublish,\n  IRequestQueryPublish,\n  IRequestCancelPublish,\n  TPublishStatus,\n} from \"./types\";\n\nexport const Role: Record<string, TRole> = {\n  admin: 1,\n  user: 2,\n  super: 3,\n};\n\nexport const Group: Record<string, TGroup> = {\n  list: 1,\n};\n\nexport const Resource: Record<string, TResource> = {\n  text: 1,\n  image: 2,\n  video: 3,\n  rich: 4,\n  number: 5,\n};\n\nexport const UserStatus: Record<string, TUserStatus> = {\n  active: 1,\n  inactive: 2,\n};\n\nexport const PublishStatus: Record<string, TPublishStatus> = {\n  progress: 0,\n  finished: 1,\n  canceled: 2,\n};\n\nexport class UniwebService {\n  private url: string = \"\";\n  private lang: string = \"en\";\n  private authKey: string | null = null;\n\n  constructor() {}\n\n  private async request<T>({\n    method,\n    endpoint,\n    data,\n  }: {\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n    endpoint: string;\n    data?: any;\n  }): Promise<IRequestResult<T>> {\n    return axios\n      .request({\n        method,\n        url: endpoint,\n        baseURL: this.url,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...(this.lang && { \"Accept-Language\": this.lang }),\n          ...(this.authKey && { Authorization: `Bearer ${this.authKey}` }),\n        },\n        params: method === \"GET\" ? data : undefined,\n        data: method === \"GET\" ? undefined : data,\n      })\n      .then((res) => ({\n        status: 200,\n        data: res.data,\n      }))\n      .catch((err) => ({\n        status: err.response?.status,\n        errors: err.response?.data.errors,\n        message: err.response?.data.message,\n      }));\n  }\n\n  private setAuth = ({ key }: { key: string }) => {\n    this.authKey = key;\n  };\n\n  public config = ({\n    url,\n    lang,\n    key,\n  }: {\n    url?: string;\n    lang?: string;\n    key?: string;\n  }) => {\n    if (url) this.url = url;\n    if (lang) this.lang = lang;\n    if (key) this.authKey = key;\n  };\n\n  public auth = {\n    login: async (input: IRequestAuthLogin) => {\n      const result = await this.request<IResultAuthLogin>({\n        method: \"POST\",\n        endpoint: \"/auth/login\",\n        data: input,\n      });\n      if (result.status === 200 && result.data)\n        this.setAuth({ key: result.data?.access_token });\n      return result;\n    },\n    verifyEmail: async (input: IRequestAuthVerifyEmail) => {\n      const result = await this.request<IResultAuthLogin>({\n        method: \"POST\",\n        endpoint: \"/auth/verify-email\",\n        data: input,\n      });\n      if (result.status === 200 && result.data)\n        this.setAuth({ key: result.data?.access_token });\n      return result;\n    },\n    resetPassword: (input: IRequestResetPassword) => {\n      return this.request<boolean>({\n        method: \"POST\",\n        endpoint: \"/auth/reset-password\",\n        data: input,\n      });\n    },\n    setPassword: (input: IRequestSetPassword) => {\n      return this.request<boolean>({\n        method: \"POST\",\n        endpoint: \"/auth/set-password\",\n        data: input,\n      });\n    },\n  };\n\n  public manage = {\n    oss: {\n      upload: async (file: File) => {\n        const result = await this.request<IResultGetUploadUrl>({\n          method: \"GET\",\n          endpoint: \"/manage/get-upload-url\",\n        });\n        if (result && result.data) {\n          const fileKey = `${result.data.key}.${file.name.split(\".\").pop()}`;\n          const formData = new FormData();\n          formData.append(\"key\", fileKey);\n          formData.append(\"policy\", result.data.policy);\n          formData.append(\"OSSAccessKeyId\", result.data.accessid);\n          formData.append(\"success_action_status\", \"200\");\n          formData.append(\"Signature\", result.data.signature);\n          formData.append(\"file\", file);\n          const upload = await axios.request({\n            method: \"POST\",\n            url: result.data.host,\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n            data: formData,\n          });\n\n          if (upload.status === 200) {\n            return {\n              status: 200,\n              data: {\n                host: result.data.host,\n                key: fileKey,\n              },\n            };\n          } else {\n            return {\n              status: upload.status,\n              message: upload.statusText,\n            };\n          }\n        } else {\n          return {\n            status: 500,\n            message: \"Internal Server Error\",\n          };\n        }\n      },\n    },\n    publish: {\n      create: (input: IRequestCreatePublish) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/create-publish\",\n          data: input,\n        }),\n      list: () =>\n        this.request<IPublish[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-publish\",\n        }),\n      get: (input: IRequestQueryPublish) =>\n        this.request<IPublish>({\n          method: \"GET\",\n          endpoint: \"/query/publish\",\n          data: input,\n        }),\n      cancel: (input: IRequestCancelPublish) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/cancel-publish\",\n          data: input,\n        }),\n      validate: () =>\n        this.request<string>({\n          method: \"GET\",\n          endpoint: \"/manage/validate-publish\",\n        }),\n    },\n    user: {\n      create: (input: IRequestCreateUser) =>\n        this.request<IResultCreateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/create-user\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateUser) =>\n        this.request<IResultUpdateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/update-user\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveUser) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-user\",\n          data: input,\n        }),\n      list: () =>\n        this.request<IUser[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-user\",\n        }),\n      resendEmailInvite: (input: IRequestResendVerifyEmail) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/resend-email-invite\",\n          data: input,\n        }),\n    },\n    struct: {\n      weight: (input: IRequestWeightStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/weight-struct\",\n          data: input,\n        }),\n      create: (input: IRequestCreateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/add-struct\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-struct\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-struct\",\n          data: input,\n        }),\n    },\n    template: {\n      create: (input: IRequestCreateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/create-template\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-template\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-template\",\n          data: input,\n        }),\n      list: () =>\n        this.request<ITemplate[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template\",\n        }),\n      listValue: (input: IRequestListTemplateValue) =>\n        this.request<ITemplateValue[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template-value\",\n          data: input,\n        }),\n      createValue: (input: IRequestCreateTemplateValue) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-template-value\",\n          data: input,\n        }),\n    },\n    group: {\n      weight: (input: IRequestWeightStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/weight-group\",\n          data: input,\n        }),\n      create: (input: IRequestCreateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-group\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/update-group\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/remove-group\",\n          data: input,\n        }),\n      get: (input: IRequestQueryGroup) =>\n        this.request<IGroup[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-group\",\n          data: input,\n        }),\n    },\n  };\n}\n\nconst UniwebInstance = new UniwebService();\n\nexport { UniwebInstance };\n"],"names":["UniwebService","_verifyEmail","_login","_upload","_this","this","url","lang","authKey","setAuth","key","config","auth","login","_asyncToGenerator","input","_result$data","result","request","method","endpoint","data","status","access_token","_x","apply","arguments","verifyEmail","_result$data2","_x2","resetPassword","setPassword","manage","oss","upload","file","fileKey","name","split","pop","formData","FormData","append","policy","accessid","signature","axios","host","headers","message","statusText","_x3","publish","create","list","get","cancel","validate","user","update","remove","resendEmailInvite","struct","weight","template","listValue","createValue","group","prototype","_request","baseURL","_extends","Authorization","params","undefined","then","res","err","_err$response","_err$response2","_err$response3","response","errors","_x4","UniwebInstance","progress","finished","canceled","text","image","video","rich","number","admin","super","active","inactive"],"mappings":"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"}