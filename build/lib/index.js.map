{"version":3,"file":"index.js","sources":["../../src/service.ts"],"sourcesContent":["import axios from \"axios\";\nimport {\n  IGroup,\n  IRequestAuthLogin,\n  IRequestCreateGroup,\n  IRequestCreateStruct,\n  IRequestCreateTemplate,\n  IRequestCreateTemplateValue,\n  IRequestCreateUser,\n  IRequestInitStruct,\n  IRequestListTemplateValue,\n  IRequestQueryGroup,\n  IRequestRemoveGroup,\n  IRequestRemoveStruct,\n  IRequestRemoveTemplate,\n  IRequestRemoveUser,\n  IRequestResult,\n  IRequestUpdateGroup,\n  IRequestUpdateStruct,\n  IRequestUpdateTemplate,\n  IRequestUpdateUser,\n  IResultAuthLogin,\n  IResultCreateUser,\n  IResultUpdateUser,\n  ITemplate,\n  ITemplateValue,\n  IUser,\n  TLang,\n  TRole,\n  TResource,\n  TGroup,\n} from \"./types\";\n\nexport const Lang: Record<string, TLang> = {\n  en: \"en\",\n  zh: \"zh\",\n};\n\nexport const Role: Record<string, TRole> = {\n  admin: 1,\n  user: 2,\n  super: 3,\n};\n\nexport const Group: Record<string, TGroup> = {\n  list: 1,\n};\n\nexport const Resource: Record<string, TResource> = {\n  text: 1,\n  image: 2,\n  video: 3,\n  rich: 4,\n};\n\nexport class UniwebService {\n  private url: string = \"\";\n  private lang: TLang | undefined = Lang.en;\n  private authKey: string | null = null;\n\n  constructor() {}\n\n  private async request<T>({\n    method,\n    endpoint,\n    data,\n  }: {\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n    endpoint: string;\n    data?: any;\n  }): Promise<IRequestResult<T>> {\n    return axios\n      .request({\n        method,\n        url: endpoint,\n        baseURL: this.url,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept-Language\": this.lang,\n          ...(this.authKey && { Authorization: `Bearer ${this.authKey}` }),\n        },\n        params: method === \"GET\" ? data : undefined,\n        data: method === \"GET\" ? undefined : data,\n      })\n      .then((res) => ({\n        status: 200,\n        data: res.data,\n      }))\n      .catch((err) => ({\n        status: err.response?.status,\n        message: err.response?.data.message,\n      }));\n  }\n\n  private setAuth = ({ key }: { key: string }) => {\n    this.authKey = key;\n  };\n\n  public config = ({ url, lang }: { url?: string; lang?: TLang }) => {\n    if (url) this.url = url;\n    if (lang) this.lang = lang;\n  };\n\n  public auth = {\n    login: async (input: IRequestAuthLogin) => {\n      const result = await this.request<IResultAuthLogin>({\n        method: \"POST\",\n        endpoint: \"/auth/login\",\n        data: input,\n      });\n      if (result.status === 200 && result.data)\n        this.setAuth({ key: result.data?.access_token });\n      return result;\n    },\n  };\n\n  public manage = {\n    user: {\n      create: (input: IRequestCreateUser) =>\n        this.request<IResultCreateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/create-user\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateUser) =>\n        this.request<IResultUpdateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/update-user\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveUser) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-user\",\n          data: input,\n        }),\n      list: () =>\n        this.request<IUser[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-user\",\n        }),\n    },\n    struct: {\n      init: (input: IRequestInitStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/init-struct\",\n          data: input,\n        }),\n      create: (input: IRequestCreateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/add-struct\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-struct\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-struct\",\n          data: input,\n        }),\n    },\n    template: {\n      create: (input: IRequestCreateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/create-template\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-template\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-template\",\n          data: input,\n        }),\n      list: () =>\n        this.request<ITemplate[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template\",\n        }),\n      listValue: (input: IRequestListTemplateValue) =>\n        this.request<ITemplateValue[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template-value\",\n          data: input,\n        }),\n      createValue: (input: IRequestCreateTemplateValue) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-template-value\",\n          data: input,\n        }),\n    },\n    group: {\n      create: (input: IRequestCreateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-group\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/update-group\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/remove-group\",\n          data: input,\n        }),\n      get: (input: IRequestQueryGroup) =>\n        this.request<IGroup[]>({\n          method: \"GET\",\n          endpoint: \"/query/group\",\n          data: input,\n        }),\n    },\n  };\n}\n\nconst UniwebInstance = new UniwebService();\n\nexport { UniwebInstance };\n"],"names":["Lang","en","zh","Role","admin","user","Group","list","Resource","text","image","video","rich","UniwebService","_this","url","lang","authKey","setAuth","key","config","auth","login","_login","_asyncToGenerator","input","_result$data","result","request","method","endpoint","data","status","access_token","_x","apply","arguments","manage","create","update","remove","struct","init","template","listValue","createValue","group","get","_proto","prototype","_request","axios","baseURL","headers","_extends","Authorization","params","undefined","then","res","err","_err$response","_err$response2","response","message","_x2","UniwebInstance"],"mappings":"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"}