{"version":3,"file":"index.js","sources":["../../src/service.ts"],"sourcesContent":["import axios from \"axios\";\nimport {\n  IGroup,\n  IRequestAuthLogin,\n  IRequestCreateGroup,\n  IRequestCreateStruct,\n  IRequestCreateTemplate,\n  IRequestCreateTemplateValue,\n  IRequestCreateUser,\n  IRequestListTemplateValue,\n  IRequestQueryGroup,\n  IRequestRemoveGroup,\n  IRequestRemoveStruct,\n  IRequestRemoveTemplate,\n  IRequestRemoveUser,\n  IRequestResult,\n  IRequestUpdateGroup,\n  IRequestUpdateStruct,\n  IRequestUpdateTemplate,\n  IRequestUpdateUser,\n  IResultAuthLogin,\n  IResultCreateUser,\n  IResultUpdateUser,\n  ITemplate,\n  ITemplateValue,\n  IUser,\n  TRole,\n  TResource,\n  TGroup,\n  IRequestAuthVerifyEmail,\n  IRequestResendVerifyEmail,\n  TUserStatus,\n  IRequestResetPassword,\n  IRequestSetPassword,\n  IRequestWeightStruct,\n  IResultGetUploadUrl,\n  IRequestCreatePublish,\n  IPublish,\n  IRequestQueryPublish,\n  IRequestCancelPublish,\n  TPublishStatus,\n} from \"./types\";\n\nexport const Role: Record<string, TRole> = {\n  admin: 1,\n  user: 2,\n  super: 3,\n};\n\nexport const Group: Record<string, TGroup> = {\n  list: 1,\n};\n\nexport const Resource: Record<string, TResource> = {\n  text: 1,\n  image: 2,\n  video: 3,\n  rich: 4,\n  number: 5,\n};\n\nexport const UserStatus: Record<string, TUserStatus> = {\n  active: 1,\n  inactive: 2,\n};\n\nexport const PublishStatus: Record<string, TPublishStatus> = {\n  progress: 0,\n  finished: 1,\n  canceled: 2,\n};\n\nexport class UniwebService {\n  private url: string = \"\";\n  private lang: string = \"en\";\n  private authKey: string | null = null;\n\n  constructor() {}\n\n  private async request<T>({\n    method,\n    endpoint,\n    data,\n  }: {\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n    endpoint: string;\n    data?: any;\n  }): Promise<IRequestResult<T>> {\n    return axios\n      .request({\n        method,\n        url: endpoint,\n        baseURL: this.url,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...(this.lang && { \"Accept-Language\": this.lang }),\n          ...(this.authKey && { Authorization: `Bearer ${this.authKey}` }),\n        },\n        params: method === \"GET\" ? data : undefined,\n        data: method === \"GET\" ? undefined : data,\n      })\n      .then((res) => ({\n        status: 200,\n        data: res.data,\n      }))\n      .catch((err) => ({\n        status: err.response?.status,\n        errors: err.response?.data.errors,\n        message: err.response?.data.message,\n      }));\n  }\n\n  private setAuth = ({ key }: { key: string }) => {\n    this.authKey = key;\n  };\n\n  public config = ({\n    url,\n    lang,\n    key,\n  }: {\n    url?: string;\n    lang?: string;\n    key?: string;\n  }) => {\n    if (url) this.url = url;\n    if (lang) this.lang = lang;\n    if (key) this.authKey = key;\n  };\n\n  public auth = {\n    login: async (input: IRequestAuthLogin) => {\n      const result = await this.request<IResultAuthLogin>({\n        method: \"POST\",\n        endpoint: \"/auth/login\",\n        data: input,\n      });\n      if (result.status === 200 && result.data)\n        this.setAuth({ key: result.data?.access_token });\n      return result;\n    },\n    verifyEmail: async (input: IRequestAuthVerifyEmail) => {\n      const result = await this.request<IResultAuthLogin>({\n        method: \"POST\",\n        endpoint: \"/auth/verify-email\",\n        data: input,\n      });\n      if (result.status === 200 && result.data)\n        this.setAuth({ key: result.data?.access_token });\n      return result;\n    },\n    resetPassword: (input: IRequestResetPassword) => {\n      return this.request<boolean>({\n        method: \"POST\",\n        endpoint: \"/auth/reset-password\",\n        data: input,\n      });\n    },\n    setPassword: (input: IRequestSetPassword) => {\n      return this.request<boolean>({\n        method: \"POST\",\n        endpoint: \"/auth/set-password\",\n        data: input,\n      });\n    },\n  };\n\n  public manage = {\n    oss: {\n      upload: async (file: File) => {\n        const result = await this.request<IResultGetUploadUrl>({\n          method: \"GET\",\n          endpoint: \"/manage/get-upload-url\",\n        });\n        if (result && result.data) {\n          const fileKey = `${result.data.key}.${file.name.split(\".\").pop()}`;\n          const formData = new FormData();\n          formData.append(\"key\", fileKey);\n          formData.append(\"policy\", result.data.policy);\n          formData.append(\"OSSAccessKeyId\", result.data.accessid);\n          formData.append(\"success_action_status\", \"200\");\n          formData.append(\"Signature\", result.data.signature);\n          formData.append(\"file\", file);\n          const upload = await axios.request({\n            method: \"POST\",\n            url: result.data.host,\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n            data: formData,\n          });\n\n          if (upload.status === 200) {\n            return {\n              status: 200,\n              data: {\n                host: result.data.host,\n                key: fileKey,\n              },\n            };\n          } else {\n            return {\n              status: upload.status,\n              message: upload.statusText,\n            };\n          }\n        } else {\n          return {\n            status: 500,\n            message: \"Internal Server Error\",\n          };\n        }\n      },\n    },\n    publish: {\n      create: (input: IRequestCreatePublish) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/create-publish\",\n          data: input,\n        }),\n      list: () =>\n        this.request<IPublish[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-publish\",\n        }),\n      get: (input: IRequestQueryPublish) =>\n        this.request<IPublish>({\n          method: \"GET\",\n          endpoint: \"/query/publish\",\n          data: input,\n        }),\n      cancel: (input: IRequestCancelPublish) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/cancel-publish\",\n          data: input,\n        }),\n      validate: () =>\n        this.request<string>({\n          method: \"GET\",\n          endpoint: \"/manage/validate-publish\",\n        }),\n    },\n    user: {\n      create: (input: IRequestCreateUser) =>\n        this.request<IResultCreateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/create-user\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateUser) =>\n        this.request<IResultUpdateUser>({\n          method: \"POST\",\n          endpoint: \"/manage/update-user\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveUser) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-user\",\n          data: input,\n        }),\n      list: () =>\n        this.request<IUser[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-user\",\n        }),\n      resendEmailInvite: (input: IRequestResendVerifyEmail) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/resend-email-invite\",\n          data: input,\n        }),\n    },\n    struct: {\n      weight: (input: IRequestWeightStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/weight-struct\",\n          data: input,\n        }),\n      create: (input: IRequestCreateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/add-struct\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-struct\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-struct\",\n          data: input,\n        }),\n    },\n    template: {\n      create: (input: IRequestCreateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/create-template\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/update-template\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveTemplate) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/manage/remove-template\",\n          data: input,\n        }),\n      list: () =>\n        this.request<ITemplate[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template\",\n        }),\n      listValue: (input: IRequestListTemplateValue) =>\n        this.request<ITemplateValue[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-template-value\",\n          data: input,\n        }),\n      createValue: (input: IRequestCreateTemplateValue) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-template-value\",\n          data: input,\n        }),\n    },\n    group: {\n      weight: (input: IRequestWeightStruct) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/weight-group\",\n          data: input,\n        }),\n      create: (input: IRequestCreateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/create-group\",\n          data: input,\n        }),\n      update: (input: IRequestUpdateGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/update-group\",\n          data: input,\n        }),\n      remove: (input: IRequestRemoveGroup) =>\n        this.request<boolean>({\n          method: \"POST\",\n          endpoint: \"/mutation/remove-group\",\n          data: input,\n        }),\n      get: (input: IRequestQueryGroup) =>\n        this.request<IGroup[]>({\n          method: \"GET\",\n          endpoint: \"/manage/list-group\",\n          data: input,\n        }),\n    },\n  };\n}\n\nconst UniwebInstance = new UniwebService();\n\nexport { UniwebInstance };\n"],"names":["Role","admin","user","Group","list","Resource","text","image","video","rich","number","UserStatus","active","inactive","PublishStatus","progress","finished","canceled","UniwebService","_this","url","lang","authKey","setAuth","key","config","auth","login","_login","_asyncToGenerator","input","_result$data","result","request","method","endpoint","data","status","access_token","_x","apply","arguments","verifyEmail","_verifyEmail","_result$data2","_x2","resetPassword","setPassword","manage","oss","upload","_upload","file","fileKey","name","split","pop","formData","FormData","append","policy","accessid","signature","axios","host","headers","message","statusText","_x3","publish","create","get","cancel","validate","update","remove","resendEmailInvite","struct","weight","template","listValue","createValue","group","_proto","prototype","_request","baseURL","_extends","Authorization","params","undefined","then","res","err","_err$response","_err$response2","_err$response3","response","errors","_x4","UniwebInstance"],"mappings":"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"}